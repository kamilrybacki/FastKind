---
- name: "Setup Cluster"
  block:
    - name: "Check if Docker network exists"
      ansible.builtin.command: "docker network inspect {{ serve_my_kind_network }}"
      register: serve_my_kind_configure_dns_docker_network_check
      ignore_errors: true

    - name: "Prepare Docker network for cluster"
      ansible.builtin.include_tasks: "network.yml"
      when: "serve_my_kind_configure_dns_docker_network_check.rc != 0"

    - name: "Check if Kind Cluster is already created"
      ansible.builtin.command: "kind get clusters"
      register: serve_my_kind_current_clusters_list
      changed_when: false
      failed_when: false

    - name: "Setup and configure Kind cluster"
      ansible.builtin.include_tasks: "cluster.yml"
      when: serve_my_kind_current_clusters_list.stdout.find(serve_my_kind_cluster_name) == -1
    
    - name: "Install MetalLB"
      ansible.builtin.include_tasks: "metallb.yml"

    - name: "Install Cilium"
      ansible.builtin.include_tasks: "cilium.yml"

    - name: "Install NGINX Ingress Controller"
      ansible.builtin.include_tasks: "ingress-nginx.yml"
      when: serve_my_kind_ingress_type == "ingress-nginx"

    - name: "Install Cert-Manager"
      ansible.builtin.include_tasks: "certificates.yml"
      when: serve_my_kind_setup_cluster_cert_manager_enabled

    - name: "Set Ingress service name for further configuration"
      set_fact:
        _serve_my_kind_setup_cluster_ingress_service_name: "{{ serve_my_kind_cluster_name }}-ingress-controller"
  rescue:
    - name: "Remove failed Kind Cluster deployment"
      ansible.builtin.command: "kind delete clusters {{ serve_my_kind_cluster_name }}"
      ignore_errors: true
    - meta: end_play
